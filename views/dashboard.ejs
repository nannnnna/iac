<!DOCTYPE html>
<html>
<head>
    <title>Dashboard</title>
</head>
<body>
<h1>Welcome to the Dashboard, <%= user.fullName %>!</h1>
<% if (user.roles.includes('ROLE_LIST_VIEW')) { %>
    <h2>List of Books</h2>
    <form id="filterForm">
        Title: <input type="text" name="title" placeholder="Filter by title">
        Description: <input type="text" name="description" placeholder="Filter by description">
        <button type="button" onclick="applyFilters()">Apply Filters</button>
    </form>
    <table id="booksTable" border="1">
        <thead>
        <tr>
            <th onclick="sortTable('title')">Title</th>
            <th onclick="sortTable('description')">Description</th>
        </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    <div id="pagination"></div>
<% } %>
<% if (user.roles.includes('ROLE_ADD')) { %>
    <button onclick="redirectToAddPage()">Добавить</button>
<% } %>
<% if (user.roles.includes('ROLE_EDIT')) { %>
    <button onclick="redirectToEditPage()">Изменить</button>
<% } %>
<% if (user.roles.includes('ROLE_DELETE')) { %>
    <button onclick="deleteSelected()">Удалить</button>
<% } %>

<script>
    let currentPage = 1;
    let currentSort = { column: 'title', direction: 'asc' };

    document.addEventListener("DOMContentLoaded", function() {
        fetchBooks();

        window.sortTable = function(column) {
            currentSort = { column: column, direction: currentSort.direction === 'asc' ? 'desc' : 'asc' };
            fetchBooks();
        };

        window.applyFilters = function() {
            const form = document.getElementById('filterForm');
            const filterData = {
                title: form.title.value,
                description: form.description.value
            };
            fetchBooks(1, filterData);
        };
    });

    function fetchBooks(page = currentPage, filters = {}) {
        const queryParams = new URLSearchParams({
            page,
            limit: 20,
            sort: JSON.stringify(currentSort),
            filter: JSON.stringify(filters)
        }).toString();

        fetch(`/api/data_list?${queryParams}`)
            .then(response => response.json())
            .then(data => {
                const { rows, totalItems, totalPages } = data;
                const tableBody = document.getElementById('booksTable').getElementsByTagName('tbody')[0];
                const paginationDiv = document.getElementById('pagination');

                currentPage = page; // Update current page

                // Update table rows
                tableBody.innerHTML = '';
                rows.forEach(book => {
                    let row = tableBody.insertRow();
                    let titleCell = row.insertCell(0);
                    let descCell = row.insertCell(1);
                    titleCell.textContent = book.title;
                    descCell.textContent = book.description;
                });

                // Update pagination
                paginationDiv.innerHTML = '';
                for (let i = 1; i <= totalPages; i++) {
                    const pageLink = document.createElement('a');
                    pageLink.href = '#';
                    pageLink.innerText = i;
                    pageLink.onclick = (e) => {
                        e.preventDefault();
                        fetchBooks(i);
                    };
                    paginationDiv.appendChild(pageLink);
                    if (i < totalPages) paginationDiv.append(' | ');
                }
            })
            .catch(error => console.error('Error fetching books:', error));
    }
</script>

</body>
</html>
